scr [FLAGS | SETTINGS | OPERATORS]...

Flags:
    -h | --help           Print this help and exit
    -v | --version        Print version info and exit

Settings (call `scr h=SETTING` for details):
    h=CMD                 Print help about a Setting or an Operator and exit

    bs=N                  Batch size
    sbs=N                 Stream buffer size
    j=N                   Max thread count (defaults to cpu core count)
    lb=yes|no|..          Line Buffering Mode (see mode descriptions in `h=lb`)

    denc=ENCODING         Default text encoding (see encodings list in `h=enc`)
    ppenc=yes|no          Prefer parent document encodins over the set default
    fenc=yes|no           Force use of denc, despite any BOMs or <meta charset>

    sel=DRIVER            Enable Selenium (see list of drivers in `h=sel`)
    sds=STRATEGY          Selenium Download Stragegy (list in `h=sds`)

Operators (call `scr h=OPERATOR` for details):
    print                 Print previous results to stdout
    format=FSTR           Format text using rust format strings
    regex[-OPTS]=REGEX    Apply a regular expression to the input
    join[N]=SEP           Concatenate (N) consecutive inputs, separated by SEP

    key=IDENT             Give a name to the previous output column
    select=IDENT          Outputs the contents of the column named IDENT

    file[N]=PATH          Outputs the bytes from a file (N times)
    stdin[N]              Outputs the bytes form stdin (N times)

    seq[n]=[B,]E[,S]      Sequence of <int>s from [B]egin to [E]nd with [S]tep
    enum[n][=[B,]E[,S]]   Like `seq`, but stops if input runs out

    count                 Outputs the record count after consuming all input

    TYPE[-[l|s|t][f][!]]  Attempt to cast inputs to TYPE, see `h=cast`
    TYPE[N]=VALUE         Insert a literal value (N times), see `h=literal`

    CHAIN_LABEL:          Start a new chain named CHAIN_LABEL

    call=CHAIN_LABEL      Forward records to the chain named CHAIN_LABEL
    callcc=CHAIN_LABEL    Like call, but runs the callee on another thread

    fork                  Forward records to all subchains, starts a subchain
    forkcat               Like fork, but concatenate all subchain outputs

    next                  Start a new subchain after the previous one
    up                    Exit the current subchain to resume with the parent

Operator modifiers
    +OPERATOR             Append Mode: Append to previous output, see `h=+`
    _OPERATOR             Transparent Mode: Pass the input through, see `h=_`
    OPERATOR@LABEL        Label: Equivalent to `OPERATOR key=LABEL`, see `h=@`
