[package]
name = "typeline_core"
version.workspace = true
license.workspace = true
authors.workspace = true
repository.workspace = true
edition.workspace = true
rust-version.workspace = true
categories.workspace = true
keywords.workspace = true

include = ["src/cli/help_sections/*.txt", "**/*.rs", "Cargo.toml"]
description = "core implementation of typeline"

[lib]
name = "typeline_core"

[dependencies]
# currently just for MappedMutexGuard. can be removed once that becomes stable
parking_lot = "0.12.3"

# utils
indexland = { path = "../indexland", features = ["nonmax"] }
indexland_utils = { path = "../indexland_utils" }

bstr = { version = "1.11.0", features = ["alloc"], default-features = false }
once_cell = "1.20.2"
memchr = "2.7.4"
static_assertions = "1.1.0"
thiserror = "2.0.3"
derive_more = { version = "1.0.0", features = ["full"] }
ref-cast = "1.0.23"
subenum = "1.1.2"


# small size / layout optimizations
arrayvec = "0.7.6"
smallstr = { version = "0.3.0", features = ["union"] }
smallvec = { version = "1.13.2", features = ["union", "write"] }
thin-vec = "0.2.13"
indexmap = "2.6.0"
bitbybit = "1.3.2"

# features for core operators / types
num = "0.4.3"
lexical-core = "1.0.2"

encoding_rs = { version = "0.8.35", features = ["fast-legacy-encode"] }
regex = "1.11.1"
regex-syntax = "0.8.5"
unicode-ident = "1.0.13"

num-order = { version = "1.2", features = ["num-rational", "num-bigint"] }
num-bigint = { version = "0.4.6" }
num-rational = { version = "0.4.2" }

serde = { version = "1.0.217", optional = true }

# for debug_log

serde_derive = { version = "1.0.215", optional = true }
serde_json = { version = "1.0.133", optional = true }
handlebars = { version = "6.2.0", features = [
    "string_helpers",
], optional = true }

# to parse quotes (todo custom)
shlex = "1.3.0"

[dependencies.metamatch]
version = "0.2.4"
# dog-food pre-release version of metatmatch for local builds
git = "https://github.com/cmrschwarz/metamatch"
branch = "pre_release"


[dependencies.bitvec]
package = "bitvec"
version = "1.0.1"
features = ["std"]
default-features = false
# use version with fixed miri for local development
git = "https://github.com/djkoloski/bitvec"
branch = "fix_miri"

# deps for repl mode:
[dependencies.reedline]
version = "0.38.0"
features = ["bashisms"]
default-features = false
optional = true

[dev-dependencies]
rstest = "0.24.0"

[features]
default = []

repl = ["dep:reedline"]
serde = ["dep:serde", "num-bigint/serde", "num-rational/serde"]

unstable = []
debug_state = []

# TODO: this is somehow bugged e.g. in integration::large::multibatch_count
# investigate.
debug_disable_terminator = []
debug_reduce_field_refs = []

debug_log = ["debug_state", "handlebars", "serde_json", "serde_derive"]
debug_log_extern_style_sheet = ["debug_log"]
debug_log_lenient = ["debug_log"]
debug_log_show_ref_lookup_iter = ["debug_log"]

debug_logging = ["debug_state"]
debug_logging_transform_update = ["debug_logging"]
debug_logging_transform_update_timestamps = ["debug_logging_transform_update"]
debug_logging_liveness_analysis = ["debug_logging"]
debug_logging_setup = ["debug_logging"]
debug_logging_streams = ["debug_logging"]
debug_logging_cow_fields = ["debug_logging"]
debug_logging_group_tracks = ["debug_logging"]
debug_logging_output_fields = ["debug_logging"]
debug_logging_field_actions = ["debug_logging"]
debug_logging_field_action_groups = ["debug_logging"]
debug_logging_iter_states = [
    "debug_logging_output_fields",
    "debug_logging_field_actions",
]
debug_logging_field_action_group_accel = ["debug_logging"]

debug_logging_full = [
    "debug_logging_transform_update",
    "debug_logging_liveness_analysis",
    "debug_logging_setup",
    "debug_logging_streams",
    "debug_logging_cow_fields",
    "debug_logging_group_tracks",
    "debug_logging_output_fields",
    "debug_logging_field_actions",
    "debug_logging_field_action_groups",
    "debug_logging_iter_states",
    "debug_logging_field_action_group_accel",
]
